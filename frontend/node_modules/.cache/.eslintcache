[{"C:\\Users\\CD\\Desktop\\Trust_Me\\frontend\\src\\index.js":"1","C:\\Users\\CD\\Desktop\\Trust_Me\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\CD\\Desktop\\Trust_Me\\frontend\\src\\App.js":"3","C:\\Users\\CD\\Desktop\\Trust_Me\\frontend\\src\\pages\\home.js":"4","C:\\Users\\CD\\Desktop\\Trust_Me\\frontend\\src\\pages\\createCustomer.js":"5","C:\\Users\\CD\\Desktop\\Trust_Me\\frontend\\src\\pages\\patient.js":"6","C:\\Users\\CD\\Desktop\\Trust_Me\\frontend\\src\\component\\createCourse.jsx":"7","C:\\Users\\CD\\Desktop\\Trust_Me\\frontend\\src\\component\\popup.jsx":"8","C:\\Users\\CD\\Desktop\\Trust_Me\\frontend\\src\\component\\Tabs_course.jsx":"9","C:\\Users\\CD\\Desktop\\Trust_Me\\frontend\\src\\component\\Booking.jsx":"10","C:\\Users\\CD\\Desktop\\Trust_Me\\frontend\\src\\component\\Schedule.jsx":"11","C:\\Users\\CD\\Desktop\\Trust_Me\\frontend\\src\\component\\today-appointments.js":"12","C:\\Users\\CD\\Desktop\\Trust_Me\\frontend\\src\\component\\appointments.js":"13","C:\\Users\\CD\\Desktop\\Trust_Me\\frontend\\src\\pages\\login.js":"14","C:\\Users\\CD\\Desktop\\Trust_Me\\frontend\\src\\pages\\register.js":"15","C:\\Users\\CD\\Desktop\\Trust_Me\\frontend\\src\\helpers\\AuthContex.js":"16","C:\\Users\\CD\\Desktop\\Trust_Me\\frontend\\src\\utils\\PrivateRoute.js":"17","C:\\Users\\CD\\Desktop\\Trust_Me\\frontend\\src\\utils\\Fullscreen.js":"18","C:\\Users\\CD\\Desktop\\Trust_Me\\frontend\\src\\pages\\PageNotFound.js":"19","C:\\Users\\CD\\Desktop\\Trust_Me\\frontend\\src\\utils\\GuestRoute.js":"20"},{"size":513,"mtime":1689976134867,"results":"21","hashOfConfig":"22"},{"size":362,"mtime":1689954625648,"results":"23","hashOfConfig":"22"},{"size":2950,"mtime":1690765947354,"results":"24","hashOfConfig":"22"},{"size":2062,"mtime":1690765980282,"results":"25","hashOfConfig":"22"},{"size":2531,"mtime":1690765975725,"results":"26","hashOfConfig":"22"},{"size":1140,"mtime":1690765998277,"results":"27","hashOfConfig":"22"},{"size":3763,"mtime":1690766026038,"results":"28","hashOfConfig":"22"},{"size":805,"mtime":1690754137267,"results":"29","hashOfConfig":"22"},{"size":11350,"mtime":1690766091692,"results":"30","hashOfConfig":"22"},{"size":579,"mtime":1690663901484,"results":"31","hashOfConfig":"22"},{"size":1398,"mtime":1690670908459,"results":"32","hashOfConfig":"22"},{"size":848,"mtime":1690639173283,"results":"33","hashOfConfig":"22"},{"size":7595,"mtime":1690639163904,"results":"34","hashOfConfig":"22"},{"size":2780,"mtime":1690765988663,"results":"35","hashOfConfig":"22"},{"size":3300,"mtime":1690766002439,"results":"36","hashOfConfig":"22"},{"size":84,"mtime":1690733913991,"results":"37","hashOfConfig":"22"},{"size":236,"mtime":1690755881933,"results":"38","hashOfConfig":"22"},{"size":1524,"mtime":1690749201315,"results":"39","hashOfConfig":"22"},{"size":147,"mtime":1690753469681,"results":"40","hashOfConfig":"22"},{"size":225,"mtime":1690756412373,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},"sb5iqa",{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95"},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\CD\\Desktop\\Trust_Me\\frontend\\src\\index.js",[],[],[],"C:\\Users\\CD\\Desktop\\Trust_Me\\frontend\\src\\reportWebVitals.js",[],[],"C:\\Users\\CD\\Desktop\\Trust_Me\\frontend\\src\\App.js",["111","112"],[],"import './App.css';\nimport { BrowserRouter as Router, Route, Routes, Link, useNavigate} from 'react-router-dom'\n\nimport CCustomer from \"./pages/createCustomer\";\nimport Home from \"./pages/home\";\nimport Patient from \"./pages/patient\";\nimport Login from './pages/login'\nimport Register from './pages/register'\nimport PageNotFound from './pages/PageNotFound';\nimport GuestRoute from './utils/GuestRoute';\n\nimport axios from 'axios'\nimport { AuthContext } from './helpers/AuthContex'\nimport { useState, useEffect } from 'react'\nimport Cookies from 'js-cookie';\nimport PrivateRoutes from './utils/PrivateRoute';\nimport FullscreenButton from './utils/Fullscreen';\nimport TrustmeLog from './asset/logo_auto.png'\n\nfunction App() {\n  const [authState, setAuthState] = useState({username: \"\", id:0 , status: false});\n  const [isLoading, setLoading] = useState(true);\n\n  useEffect(()=>{\n    axios.get('https://visa-test-5417272958c4.herokuapp.com/auth/validate', { headers:{\n      accessToken: Cookies.get('accessToken'),\n    },\n  }).then((response)=>{\n      if(response.data.error)\n      {\n         setAuthState({...authState, status: false});\n      }\n      else\n      {\n        setAuthState({username: response.data.username , id: response.data.id , status: true})\n        \n      }\n    }).then(()=>{setLoading(false)})\n    ;\n  },[])\n\n  const  logout = () =>{\n    Cookies.remove(\"accessToken\")\n    setAuthState({username: \"\", id:0 , status: false})\n  }\n  if (isLoading) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div className='App'>\n      <AuthContext.Provider value={{ authState, setAuthState }}>\n        <Router>\n          <div className=\"nav\">\n          <img src={TrustmeLog} alt=\"Logo\" className='navText img'/>\n          <Link to=\"/\" className='navText'>Home </Link>\n          {!authState.status ? (\n            <>\n              <Link to=\"/login\" className='navText'>login </Link>\n              <Link to=\"/register\" className='navText'>register </Link>\n            </>\n          ):(\n            <>\n            <div onClick={logout} className='navText_right'> logout</div>\n            <div className='navText_right username'>{authState.username}</div>\n            </>\n          )}\n          <FullscreenButton />\n          </div>\n          <Routes>\n            <Route element={<PrivateRoutes token={authState.status} />}>\n              <Route path=\"/\" element={<Home />} />\n              <Route path=\"/createCustomer\" element={<CCustomer />} exact />\n              <Route path=\"/patient/:id\"element={<Patient />}exact/>\n            </Route>\n            <Route element={<GuestRoute token={authState.status} />}>\n              <Route path=\"/login\" element={<Login />} exact />\n              <Route path=\"/register\" element={<Register />} exact />\n            </Route>\n            <Route path=\"*\" element={<PageNotFound />} exact />\n          </Routes>\n        </Router>\n      </AuthContext.Provider>\n      \n    </div>\n  )\n}\n\nexport default App;\n","C:\\Users\\CD\\Desktop\\Trust_Me\\frontend\\src\\pages\\home.js",["113","114","115","116","117","118","119"],[],"import React, { useEffect, useState } from 'react';\r\nimport { BrowserRouter as Router, Route, Routes, Link, useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport './home.css';\r\nimport Select, { createFilter } from \"react-select\";\r\nimport TrustmeLog from '../asset/logo_auto.png'\r\n\r\nfunction Home() {\r\n  const MIN_INPUT_LENGTH = 3;\r\n  const filterOption = (candidate, input) => {\r\n    return (\r\n      // Min input length\r\n      input.length >= MIN_INPUT_LENGTH &&\r\n      // Use Select's default filtering for string matching by creating filter\r\n      createFilter({})(candidate, input)\r\n    );\r\n  };\r\n\r\n  // Only show no options when at min length or can create custom message\r\n  // or return null if no minLength message desired\r\n  const noOptionsMessage = (input) =>\r\n    input.length >= MIN_INPUT_LENGTH\r\n      ? \"No options\"\r\n      : \"กรุณาใส่ชื่อ หรือ เบอร์โทร\";\r\n\r\n\r\n\r\n\r\n\r\n  let history = useNavigate();\r\n  const resultLimit = 10\r\n  let i = 0\r\n\r\n  const [listOfPatients, setListOfPatients] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios.get(\"https://visa-test-5417272958c4.herokuapp.com/patient\").then((response) => {\r\n      setListOfPatients(response.data);\r\n    });\r\n  }, []);\r\n\r\n  const options = listOfPatients.map((patient) => ({\r\n    value: patient.id,\r\n    label: patient.name,\r\n  }));\r\n\r\n  const handleSelectChange = (selectedOption) => {\r\n    if (selectedOption) {\r\n      history(`/patient/${selectedOption.value}`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"block\">\r\n        <img src={TrustmeLog} className='mainimg'/>\r\n        <div className=\"block_item\">\r\n          <Select options={options} onChange={handleSelectChange} filterOption={filterOption} noOptionsMessage={noOptionsMessage} components={{ DropdownIndicator:() => null, IndicatorSeparator:() => null }}/>\r\n        </div>\r\n        <a href=\"/createCustomer\" className=\"myButton\">\r\n          ลูกค้าใหม่\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","C:\\Users\\CD\\Desktop\\Trust_Me\\frontend\\src\\pages\\createCustomer.js",["120"],[],"import React from 'react'\r\nimport {Formik, Form, Field, ErrorMessage, validateYupSchema} from 'formik'\r\nimport './createCustomer.css';\r\nimport * as Yup from 'yup';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useEffect, useState } from 'react';\r\n\r\n\r\nfunction CCustomer() {\r\n  const initialValuess = { name: \"\", age: \"\" ,department_id:\"\" };\r\n  const history = useNavigate();\r\n  const [list_of_clinics, setListOfClinics] = useState([]);\r\n\r\n  useEffect(()=>{\r\n    axios.get(\"https://visa-test-5417272958c4.herokuapp.com/patient/clinic\").then((response)=>{\r\n      setListOfClinics(response.data);\r\n    })\r\n  },[])\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    name:Yup.string().required(),\r\n    age: Yup.number().typeError(\"กรุณาใส่เเค่ตัวเลข\").required(\"กรุณาใส่อายุ\").positive(\"อายุต้องเป็นจำนวนเต็มบวก\").integer(\"อายุต้องเป็นจำนวนเต็ม\"),\r\n    department_id: Yup.number().required(\"กรุณาใส่สาขา-แผนก\").typeError(\"กรุณาใส่สาขา-แผนก\"),\r\n  })\r\n\r\n  const onSubmit = (data)=>{\r\n    axios.post('https://visa-test-5417272958c4.herokuapp.com/patient', data).then((response) => {console.log(\"Successful sent\");\r\n  history('/');})\r\n  }\r\n\r\n  return (\r\n    <div className=\"block\">\r\n      <Formik initialValues={initialValuess} onSubmit={onSubmit} validationSchema={validationSchema}>\r\n        <Form className='block_info'>\r\n          <label>ชื่อ</label>\r\n          <ErrorMessage name=\"name\" component=\"span\" />\r\n          <Field id=\"input\" name=\"name\" placeholder=\"ชื่อ-นามส\" />\r\n          <label>อายุ</label>\r\n          <ErrorMessage name=\"age\" component=\"span\" />\r\n          <Field id=\"input\" name=\"age\" placeholder=\"อายุ\" />\r\n          <label>แผนก</label>\r\n          <ErrorMessage name=\"department_id\" component=\"span\" />\r\n          <Field as=\"select\" id=\"input\" name=\"department_id\" placeholder=\"แผนก\">\r\n          <option defaultValue >สาขา-แผนก</option>\r\n            {list_of_clinics.map((value, key) => (\r\n              <option  key={key} className=\"name\" value={value.id}>{value.department}</option>\r\n            ))}\r\n          </Field>\r\n          <button type=\"submit\">เพิ่มผู้ป่วย</button>\r\n        </Form>\r\n      </Formik>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default CCustomer","C:\\Users\\CD\\Desktop\\Trust_Me\\frontend\\src\\pages\\patient.js",["121","122"],[],"import React, {useEffect, useState , useContext} from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport axios from 'axios';\r\nimport './patient.css';\r\n\r\nimport TabsCourse from '../component/Tabs_course';\r\n\r\nfunction Patient() {\r\n    let {id} = useParams();\r\n    const [patient, setPatient] = useState({});\r\n    const [clinic, setClinic] = useState({});\r\n\r\n    \r\n    \r\n    useEffect(() => {\r\n      axios.get(`https://visa-test-5417272958c4.herokuapp.com/patient/byId/${id}`).then((response) => {\r\n        setPatient(response.data);\r\n      axios.get(`https://visa-test-5417272958c4.herokuapp.com/patient/clinic/byId/${response.data.department_id}`).then((clinicResponse) => {\r\n        setClinic(clinicResponse.data);\r\n      });\r\n      });\r\n    }, []);\r\n\r\n    \r\n\r\n  return (\r\n    <div className='blocks'>\r\n      <div className='blocks_info'>\r\n        <div className='a'>\r\n          <div>ชื่อ: {patient.name}</div>\r\n          <div>อายุ: {patient.age}</div>\r\n          <div>สาขา: {clinic.department} </div>\r\n        </div>\r\n      </div>\r\n      <TabsCourse />\r\n    </div>\r\n    \r\n  )\r\n}\r\n\r\nexport default Patient","C:\\Users\\CD\\Desktop\\Trust_Me\\frontend\\src\\component\\createCourse.jsx",["123","124"],[],"import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nconst CreateCourse = ({ onclose , onconfirm }) => {\r\n  const { id } = useParams();\r\n  const [patient, setPatient] = useState({});\r\n  const [clinic, setClinic] = useState({});\r\n  const [employee, setEmployee] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios.get(`https://visa-test-5417272958c4.herokuapp.com/patient/byId/${id}`).then((response) => {\r\n      setPatient(response.data);\r\n      axios\r\n        .get(`https://visa-test-5417272958c4.herokuapp.com/patient/clinic/byId/${response.data.department_id}`)\r\n        .then((clinicResponse) => {\r\n          setClinic(clinicResponse.data);\r\n        });\r\n      axios.get('https://visa-test-5417272958c4.herokuapp.com/employee').then((response) => {\r\n        setEmployee(response.data);\r\n      });\r\n    });\r\n  }, []);\r\n\r\n  const onSubmit = (data) => {\r\n    axios.post('https://visa-test-5417272958c4.herokuapp.com/course', data).then((response) => {\r\n      console.log('Successful sent');\r\n      onclose();\r\n      onconfirm();\r\n    });\r\n    \r\n  };\r\n\r\n  const initialValuess = {\r\n    department_id: clinic.id,\r\n    course_name: '',\r\n    course_detail: '',\r\n    course_price: '',\r\n    course_times: '',\r\n    course_comid: '',\r\n    patientId: id,\r\n    course_status: \"ongoing\"\r\n  };\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    course_name: Yup.string().required('กรุณาใส่ชื่อคอสต์'),\r\n    course_detail: Yup.string().required('กรุณาใส่ข้อมูล'),\r\n    course_price: Yup.number().required('กรุณาใส่ราคา'),\r\n    course_times: Yup.number().required('กรุณาจำนวนครั้ง'),\r\n    course_comid: Yup.number()\r\n      .required('กรุณาใส่ชื่อผู้แนะนำ')\r\n      .typeError('กรุณาใส่ชื่อผู้แนะนำ'),\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <Formik enableReinitialize initialValues={initialValuess} onSubmit={onSubmit} validationSchema={validationSchema}>\r\n        <Form className='block_info'>\r\n          <label>ชื่อคอสต์</label>\r\n          <ErrorMessage name='course_name' component='span' />\r\n          <Field id='input' name='course_name' placeholder='ชื่อคอสต์' />\r\n          <label>ข้อมูลเพิ่มเติม</label>\r\n          <ErrorMessage name='course_detail' component='span' />\r\n          <Field id='input' name='course_detail' placeholder='ข้อมูลเพิ่มเติม' />\r\n          <label>ราคา</label>\r\n          <ErrorMessage name='course_price' component='span' />\r\n          <Field id='input' name='course_price' placeholder='ราคา' />\r\n          <label>จำนวนครั้ง</label>\r\n          <ErrorMessage name='course_times' component='span' />\r\n          <Field id='input' name='course_times' placeholder='จำนวนครั้ง' />\r\n          <label>ผู้แนะนำ</label>\r\n          <ErrorMessage name='course_comid' component='span' />\r\n          <Field as='select' id='input' name='course_comid' placeholder='ผู้แนะนำ'>\r\n            <option defaultValue>ผู้แนะนำ</option>\r\n            {employee.map((value) => (\r\n              <option key={value.id} className='name' value={value.id}>\r\n                {value.name}\r\n              </option>\r\n            ))}\r\n          </Field>\r\n          <button type='submit' >เพิ่มคอสต์</button>\r\n        </Form>\r\n      </Formik>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateCourse;\r\n","C:\\Users\\CD\\Desktop\\Trust_Me\\frontend\\src\\component\\popup.jsx",[],[],"C:\\Users\\CD\\Desktop\\Trust_Me\\frontend\\src\\component\\Tabs_course.jsx",["125","126","127","128","129","130"],[],"import React, {useEffect, useState} from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport axios from 'axios';\r\nimport '../pages/patient.css';\r\n\r\nimport Ppopup from '../component/popup'\r\nimport Booking from './Booking';\r\nimport Schedule from './Schedule';\r\n\r\nimport Tab,{tabClasses} from '@mui/base/Tab';\r\nimport TabsList from '@mui/base/TabsList';\r\nimport TabPanel from '@mui/base/TabPanel';\r\nimport Tabs from '@mui/base/Tabs';\r\n\r\n\r\n\r\nfunction Makebutton({courseId,coursestId, setCoursest,setCourse, id ,status }){\r\n  const [isButtonDisabled, setButtonDisabled] = useState(status);\r\n\r\n\r\n  const handleFinish =()=>{\r\n    try{\r\n      axios.put(`https://visa-test-5417272958c4.herokuapp.com/course/coursest/${courseId}/${coursestId}`).then(() => {\r\n        axios.put(`https://visa-test-5417272958c4.herokuapp.com/course/courseUpdata/${courseId}`).then(() => {\r\n          axios.get(`https://visa-test-5417272958c4.herokuapp.com/course/coursest/${id}`).then((courseResponse) => {\r\n            setCoursest(courseResponse.data);\r\n              axios.get(`https://visa-test-5417272958c4.herokuapp.com/course/${id}`).then((courseResponse) => {\r\n                  setCourse(courseResponse.data);\r\n                  setButtonDisabled(true); \r\n            });\r\n          });  \r\n        });\r\n      });\r\n    }\r\n    catch(error)\r\n    {\r\n      console.error('Failed to delete the course:', error);\r\n    }\r\n  }\r\nreturn(\r\n    <button className='course_finish_button' onClick={handleFinish} disabled={isButtonDisabled}>เสร็จสิ้น</button>\r\n  );\r\n}\r\n\r\n\r\nfunction MakeFinishbutton({courseId,setCourse,id,setcoursefinished }){\r\n\r\n\r\n  const handleFinish =()=>{\r\n    try{\r\n      axios.put(`https://visa-test-5417272958c4.herokuapp.com/course/coursefinished/${courseId}`).then(() => {\r\n      axios.get(`https://visa-test-5417272958c4.herokuapp.com/course/${id}`).then((courseResponse) => {\r\n      setCourse(courseResponse.data);\r\n      axios.get(`https://visa-test-5417272958c4.herokuapp.com/course/cf/${id}`).then((courseResponse) =>{\r\n      setcoursefinished(courseResponse.data)\r\n      });\r\n      });\r\n      });  \r\n    }\r\n    catch(error)\r\n    {\r\n      console.error('Failed to delete the course:', error);\r\n    }\r\n  }\r\nreturn(\r\n    <button className='button_b' onClick={handleFinish}>เสร็จ</button>\r\n  );\r\n}\r\n\r\nconst Tabss = ({onconfirm}) => {\r\n    let {id} = useParams();\r\n    const [patient, setPatient] = useState({});\r\n    const [clinic, setClinic] = useState({});\r\n    const [course, setCourse] = useState([]);\r\n    const [course_finished, setcoursefinished] = useState([]);\r\n    const [coursest, setCoursest] = useState([]);\r\n    const [selected, setSelected] = useState(null)\r\n\r\n\r\n    const toggle = (i) =>{\r\n      if (selected === i){\r\n        return setSelected(null)\r\n      }\r\n      setSelected(i)\r\n    }\r\n\r\n    \r\n    useEffect(() => {\r\n      axios.get(`https://visa-test-5417272958c4.herokuapp.com/patient/byId/${id}`).then((response) => {\r\n        setPatient(response.data);\r\n      axios.get(`https://visa-test-5417272958c4.herokuapp.com/patient/clinic/byId/${response.data.department_id}`).then((clinicResponse) => {\r\n        setClinic(clinicResponse.data);\r\n      axios.get(`https://visa-test-5417272958c4.herokuapp.com/course/${id}`).then((courseResponse) =>{\r\n        setCourse(courseResponse.data)\r\n      axios.get(`https://visa-test-5417272958c4.herokuapp.com/course/cf/${id}`).then((courseResponse) =>{\r\n        setcoursefinished(courseResponse.data)\r\n      axios.get(`https://visa-test-5417272958c4.herokuapp.com/course/coursest/${id}`).then((coursestResponse) =>{\r\n        setCoursest(coursestResponse.data)\r\n        console.log(coursestResponse.data)\r\n      });\r\n      });\r\n      });\r\n      });\r\n      });\r\n    }, []);\r\n\r\n\r\n    const handleDeleteCourse = async (courseId) => {\r\n      try {\r\n        await axios.delete(`https://visa-test-5417272958c4.herokuapp.com/course/${courseId}`);\r\n        setCourse((prevCourses) => prevCourses.filter((course) => course.id !== courseId));\r\n      } catch (error) {\r\n        console.error('Failed to delete the course:', error);\r\n      }\r\n    };\r\n\r\n    const handleAction = () => {\r\n      axios.get(`https://visa-test-5417272958c4.herokuapp.com/course/${id}`).then((courseResponse) => {\r\n        setCourse(courseResponse.data);\r\n      axios.get(`https://visa-test-5417272958c4.herokuapp.com/course/coursest/${id}`).then((courseResponse) => {\r\n          setCoursest(courseResponse.data);\r\n      });\r\n      });\r\n    };\r\n\r\n    \r\n    const isEmpty = ()=>{\r\n      return course.length === 0;\r\n    }\r\n\r\n  \r\n\r\n  return (\r\n    \r\n    <Tabs defaultValue={1} style={{display:\"flex\" ,flexDirection:\"column\"}} >\r\n        <TabsList className='CustomTabsList'>\r\n            <Tab className='CustomTab' value={1}>กำลังดำเนินการ</Tab>\r\n            <Tab className='CustomTab' value={2}>ประวัติ</Tab>\r\n            <Tab className='CustomTab' value={3}>ตารางนัด</Tab>\r\n        </TabsList>\r\n        <TabPanel value={1}>\r\n    <div >\r\n        {isEmpty() ? (\r\n            <div></div>\r\n          ) : (\r\n        <div className=\"course course_header\" style={{width:\"80%\"}} >\r\n            <div className=\"course_item\" >ลำดับ</div>\r\n            <div className=\"course_item\" >ชื่อคอส</div>\r\n            <div className=\"course_item\">รายละเอียด</div>\r\n            <div className=\"course_item\">ราคารวม</div>\r\n            <div className=\"course_item\">จำนวนครั้ง</div>\r\n        </div>)}\r\n        {course.map((value, key) => (\r\n            <div className=\"course_detail_test\" >\r\n                <div style={{display: \"flex\"}} >\r\n                  <div className={value.course_status === \"finished\" ? 'hiddem course' : 'course'}  style={{width:\"80%\"}} onClick={()=> toggle(key)}>\r\n                    <div className=\"course_item\" >{key+1}</div>\r\n                    <div className=\"course_item\" >{value.course_name}</div>\r\n                    <div className=\"course_item\" >{value.course_detail}</div>\r\n                    <div className=\"course_item\" >{value.course_price} บาท</div>\r\n                    <div className=\"course_item\" >{value.course_times} ครั้ง</div>\r\n                  </div>\r\n                  <div style={{display: \"flex\"}}>   \r\n                    {parseInt(value.course_times) == \"0\" ? (\r\n                          <MakeFinishbutton courseId={value.id} setCourse={setCourse} id={id} setcoursefinished={setcoursefinished} />\r\n                        ) : (\r\n                        <button className=\"button_a\" onClick={() => handleDeleteCourse(value.id)}>ลบ</button> )}\r\n                  </div>\r\n                </div>\r\n                \r\n                <div className={selected === key ? 'course_detail_show' : 'course_detail'} >\r\n                    <div className=\"course_detail_items\">\r\n                      <div className=\"course_item\" >ครั้งที่</div>\r\n                      <div className=\"course_item\">ราคา</div>\r\n                      <div className=\"course_item\">สถานะ</div>\r\n                      <div className=\"course_item\">ผู้ดูแล</div>\r\n                      <div></div>\r\n                        {coursest.map((cValue, cIndex) => (\r\n                          cValue.CourseId === value.id &&(\r\n                          <>\r\n                              <div className=\"course_times_item\" > {cValue.course_number+1}</div>\r\n                              <div className=\"course_times_item\" > {cValue.course_price}</div>\r\n                              <div className=\"course_times_item\" > {cValue.course_status}</div>\r\n                              <div className=\"course_times_item\" > {cValue.course_employee_id}</div>\r\n                              <div style={{display: \"flex\", alignItems: \"center\"}}>\r\n                                <Makebutton courseId={cValue.CourseId} coursestId={cValue.course_number} setCourse={setCourse} setCoursest={setCoursest} id={id} status={cValue.course_status===\"finished\"}/>\r\n                              </div>\r\n                          </>\r\n                        )\r\n                        ))}\r\n                    </div>\r\n                </div> \r\n              </div>           \r\n        ))}\r\n    </div>\r\n    <Ppopup onconfirm={handleAction}/>\r\n    </TabPanel>\r\n    <TabPanel value={2}>\r\n    <div >\r\n        <div className=\"course course_header\" style={{width:\"80%\"}} >\r\n            <div className=\"course_item\" >ลำดับ</div>\r\n            <div className=\"course_item\" >ชื่อคอส</div>\r\n            <div className=\"course_item\">รายละเอียด</div>\r\n            <div className=\"course_item\">ราคารวม</div>\r\n            <div className=\"course_item\">จำนวนครั้ง</div>\r\n        </div>\r\n        {course_finished.map((value, key) => (\r\n            <div className=\"course_detail_test\" >\r\n                <div style={{display: \"flex\"}} >\r\n                  <div className={value.course_status === \"finished\" ? 'hiddem course' : 'course'}  style={{width:\"80%\"}} onClick={()=> toggle(key)}>\r\n                    <div className=\"course_item\" >{key+1}</div>\r\n                    <div className=\"course_item\" >{value.course_name}</div>\r\n                    <div className=\"course_item\" >{value.course_detail}</div>\r\n                    <div className=\"course_item\" >{value.course_price} บาท</div>\r\n                    <div className=\"course_item\" >{value.course_times} ครั้ง</div>\r\n                  </div>\r\n                </div>\r\n                <div className={selected === key ? 'course_detail_show' : 'course_detail'} >\r\n                    <div className=\"course_detail_items\">\r\n                      <div className=\"course_item\" >ครั้งที่</div>\r\n                      <div className=\"course_item\">ราคา</div>\r\n                      <div className=\"course_item\">สถานะ</div>\r\n                      <div className=\"course_item\">ผู้ดูแล</div>\r\n                      <div></div>\r\n                        {coursest.map((cValue, cIndex) => (\r\n                          cValue.CourseId === value.id &&(\r\n                          <>\r\n                              <div className=\"course_times_item\" > {cValue.course_number+1}</div>\r\n                              <div className=\"course_times_item\" > {cValue.course_price}</div>\r\n                              <div className=\"course_times_item\" > {cValue.course_status}</div>\r\n                              <div className=\"course_times_item\" > {cValue.course_employee_id}</div>\r\n                              <div style={{display: \"flex\", alignItems: \"center\"}}>\r\n                                <Makebutton courseId={cValue.CourseId} coursestId={cValue.course_number} setCourse={setCourse} setCoursest={setCoursest} id={id} status={cValue.course_status===\"finished\"}/>\r\n                              </div>\r\n                          </>\r\n                        )\r\n                        ))}\r\n                    </div>\r\n                </div> \r\n              </div>           \r\n        ))}\r\n    </div>\r\n\r\n    </TabPanel>\r\n    <TabPanel value={3}>\r\n      <div> \r\n          <Schedule/>\r\n      </div>\r\n    </TabPanel>\r\n    </Tabs>\r\n  )\r\n}\r\n\r\nexport default Tabss","C:\\Users\\CD\\Desktop\\Trust_Me\\frontend\\src\\component\\Booking.jsx",[],[],"C:\\Users\\CD\\Desktop\\Trust_Me\\frontend\\src\\component\\Schedule.jsx",[],[],"C:\\Users\\CD\\Desktop\\Trust_Me\\frontend\\src\\component\\today-appointments.js",[],[],"C:\\Users\\CD\\Desktop\\Trust_Me\\frontend\\src\\component\\appointments.js",[],[],"C:\\Users\\CD\\Desktop\\Trust_Me\\frontend\\src\\pages\\login.js",["131"],[],"import React, { useContext } from 'react'\r\nimport {Formik, Form, Field, ErrorMessage, validateYupSchema} from 'formik'\r\nimport './createCustomer.css';\r\nimport * as Yup from 'yup';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Cookies from 'js-cookie';\r\nimport { AuthContext } from '../helpers/AuthContex';\r\n\r\nconst Login = () => {\r\n  const initialValuess = { username: \"\", password: \"\"};\r\n  const history = useNavigate();\r\n  const{setAuthState} = useContext(AuthContext)\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    username: Yup.string()\r\n      .required('กรุณากรอกชื่อผู้ใช้')\r\n      .matches(/^[A-Za-z]+$/, 'กรุณากรอกชื่อผู้ใช้เป็นภาษาอังกฤษ')\r\n      .min(4, 'กรุณากรอกชื่อผู้ใช้อย่างน้อย 4-20ตัว')\r\n      .max(20, 'กรุณากรอกชื่อผู้ใช้อย่างน้อย 4-20ตัว'),\r\n    password: Yup.string()\r\n      .required('กรุณากรอกรหัสผ่าน')\r\n      .matches(/^[A-Za-z0-9]+$/, 'กรุณากรอกรหัสผ่านเป็นภาษาอังกฤษ')\r\n      .min(4, 'กรุณากรอกรหัสผ่านอย่างน้อย 4-20ตัว')\r\n      .max(20, 'กรุณากรอกรหัสผ่านอย่างน้อย 4-20ตัว'),\r\n  });\r\n\r\n  const onSubmit = (data)=>{\r\n    axios.post('https://visa-test-5417272958c4.herokuapp.com/auth/login', data).then((response) => {\r\n      if(response.data.error) {\r\n        alert(response.data.error);\r\n      }\r\n      else{\r\n        Cookies.set(\"accessToken\", response.data.token);\r\n        setAuthState({username: response.data.username , id: response.data.id , status:true})\r\n        history('/');\r\n      }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"block\">\r\n            <Formik initialValues={initialValuess} onSubmit={onSubmit} validationSchema={validationSchema}>\r\n            <Form className='block_info'>\r\n              <label>ชื่อผู้ใช้</label>\r\n              <ErrorMessage name=\"username\" component=\"span\" />\r\n              <Field autocomplete=\"off\" id=\"input\" name=\"username\" placeholder=\"ชื่อผู้ใช้\" />\r\n              <label>รหัสผ่าน</label>\r\n              <ErrorMessage name=\"password\" component=\"span\" />\r\n              <Field autocomplete=\"off\" type=\"password\" id=\"input\" name=\"password\" placeholder=\"รหัสผ่าน\" />\r\n              <button type=\"submit\">สมัคร</button>\r\n            </Form>\r\n          </Formik>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Login","C:\\Users\\CD\\Desktop\\Trust_Me\\frontend\\src\\pages\\register.js",["132"],[],"import React from 'react'\r\nimport {Formik, Form, Field, ErrorMessage, validateYupSchema} from 'formik'\r\nimport './createCustomer.css';\r\nimport * as Yup from 'yup';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst Register = () => {\r\n  const initialValuess = { username: \"\", password: \"\", confirmPassword: ''};\r\n  const history = useNavigate();\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    username: Yup.string()\r\n      .required('กรุณากรอกชื่อผู้ใช้')\r\n      .matches(/^[A-Za-z]+$/, 'กรุณากรอกชื่อผู้ใช้เป็นภาษาอังกฤษ')\r\n      .min(4, 'กรุณากรอกชื่อผู้ใช้อย่างน้อย 4-20 ตัว')\r\n      .max(20, 'กรุณากรอกชื่อผู้ใช้อย่างน้อย 4-20 ตัว'),\r\n    password: Yup.string()\r\n      .required('กรุณากรอกรหัสผ่าน')\r\n      .matches(/^[A-Za-z0-9]+$/, 'กรุณากรอกรหัสผ่านเป็นภาษาอังกฤษ')\r\n      .min(4, 'กรุณากรอกรหัสผ่านอย่างน้อย 4-20 ตัว')\r\n      .max(20, 'กรุณากรอกรหัสผ่านอย่างน้อย 4-20 ตัว'),\r\n    confirmPassword: Yup.string()\r\n      .required('กรุณายืนยันรหัสผ่าน')\r\n      .oneOf([Yup.ref('password'), null], 'รหัสผ่านไม่ตรงกัน'),\r\n  });\r\n\r\n  const onSubmit = (data, { setSubmitting }) => {\r\n    const { confirmPassword, ...postData } = data;\r\n    axios.post('https://visa-test-5417272958c4.herokuapp.com/auth', postData)\r\n      .then((response) => {\r\n        console.log('Successful register');\r\n        history('/login');\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error registering:', error);\r\n      })\r\n      .finally(() => {\r\n        setSubmitting(false);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"block\">\r\n            <Formik initialValues={initialValuess} onSubmit={onSubmit} validationSchema={validationSchema}>\r\n            <Form className='block_info'>\r\n              <label>ชื่อผู้ใช้</label>\r\n              <ErrorMessage name=\"username\" component=\"span\" />\r\n              <Field autocomplete=\"off\" id=\"input\" name=\"username\" placeholder=\"ชื่อผู้ใช้\" />\r\n              <label>รหัสผ่าน</label>\r\n              <ErrorMessage name=\"password\" component=\"span\" />\r\n              <Field autocomplete=\"off\" type=\"password\" id=\"input\" name=\"password\" placeholder=\"รหัสผ่าน\" />\r\n              <label>ยืนยันรหัสผ่าน</label>\r\n              <ErrorMessage name=\"confirmPassword\" component=\"span\" />\r\n              <Field\r\n                autoComplete=\"off\"\r\n                type=\"password\"\r\n                id=\"input\"\r\n                name=\"confirmPassword\"\r\n                placeholder=\"ยืนยันรหัสผ่าน\"\r\n              />\r\n              <button type=\"submit\">สมัคร</button>\r\n            </Form>\r\n          </Formik>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Register","C:\\Users\\CD\\Desktop\\Trust_Me\\frontend\\src\\helpers\\AuthContex.js",[],[],"C:\\Users\\CD\\Desktop\\Trust_Me\\frontend\\src\\utils\\PrivateRoute.js",[],[],"C:\\Users\\CD\\Desktop\\Trust_Me\\frontend\\src\\utils\\Fullscreen.js",[],[],"C:\\Users\\CD\\Desktop\\Trust_Me\\frontend\\src\\pages\\PageNotFound.js",[],[],"C:\\Users\\CD\\Desktop\\Trust_Me\\frontend\\src\\utils\\GuestRoute.js",[],[],{"ruleId":"133","severity":1,"message":"134","line":2,"column":56,"nodeType":"135","messageId":"136","endLine":2,"endColumn":67},{"ruleId":"137","severity":1,"message":"138","line":40,"column":5,"nodeType":"139","endLine":40,"endColumn":7,"suggestions":"140"},{"ruleId":"133","severity":1,"message":"141","line":2,"column":27,"nodeType":"135","messageId":"136","endLine":2,"endColumn":33},{"ruleId":"133","severity":1,"message":"142","line":2,"column":35,"nodeType":"135","messageId":"136","endLine":2,"endColumn":40},{"ruleId":"133","severity":1,"message":"143","line":2,"column":42,"nodeType":"135","messageId":"136","endLine":2,"endColumn":48},{"ruleId":"133","severity":1,"message":"144","line":2,"column":50,"nodeType":"135","messageId":"136","endLine":2,"endColumn":54},{"ruleId":"133","severity":1,"message":"145","line":31,"column":9,"nodeType":"135","messageId":"136","endLine":31,"endColumn":20},{"ruleId":"133","severity":1,"message":"146","line":32,"column":7,"nodeType":"135","messageId":"136","endLine":32,"endColumn":8},{"ruleId":"147","severity":1,"message":"148","line":56,"column":9,"nodeType":"149","endLine":56,"endColumn":52},{"ruleId":"133","severity":1,"message":"150","line":2,"column":44,"nodeType":"135","messageId":"136","endLine":2,"endColumn":61},{"ruleId":"133","severity":1,"message":"151","line":1,"column":38,"nodeType":"135","messageId":"136","endLine":1,"endColumn":48},{"ruleId":"137","severity":1,"message":"152","line":22,"column":8,"nodeType":"139","endLine":22,"endColumn":10,"suggestions":"153"},{"ruleId":"133","severity":1,"message":"154","line":9,"column":10,"nodeType":"135","messageId":"136","endLine":9,"endColumn":17},{"ruleId":"137","severity":1,"message":"152","line":25,"column":6,"nodeType":"139","endLine":25,"endColumn":8,"suggestions":"155"},{"ruleId":"133","severity":1,"message":"156","line":7,"column":8,"nodeType":"135","messageId":"136","endLine":7,"endColumn":15},{"ruleId":"133","severity":1,"message":"157","line":10,"column":13,"nodeType":"135","messageId":"136","endLine":10,"endColumn":23},{"ruleId":"133","severity":1,"message":"154","line":72,"column":12,"nodeType":"135","messageId":"136","endLine":72,"endColumn":19},{"ruleId":"133","severity":1,"message":"158","line":73,"column":12,"nodeType":"135","messageId":"136","endLine":73,"endColumn":18},{"ruleId":"137","severity":1,"message":"152","line":105,"column":8,"nodeType":"139","endLine":105,"endColumn":10,"suggestions":"159"},{"ruleId":"160","severity":1,"message":"161","line":164,"column":51,"nodeType":"162","messageId":"163","endLine":164,"endColumn":53},{"ruleId":"133","severity":1,"message":"150","line":2,"column":44,"nodeType":"135","messageId":"136","endLine":2,"endColumn":61},{"ruleId":"133","severity":1,"message":"150","line":2,"column":44,"nodeType":"135","messageId":"136","endLine":2,"endColumn":61},"no-unused-vars","'useNavigate' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'authState'. Either include it or remove the dependency array. You can also do a functional update 'setAuthState(a => ...)' if you only need 'authState' in the 'setAuthState' call.","ArrayExpression",["164"],"'Router' is defined but never used.","'Route' is defined but never used.","'Routes' is defined but never used.","'Link' is defined but never used.","'resultLimit' is assigned a value but never used.","'i' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'validateYupSchema' is defined but never used.","'useContext' is defined but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["165"],"'patient' is assigned a value but never used.",["166"],"'Booking' is defined but never used.","'tabClasses' is defined but never used.","'clinic' is assigned a value but never used.",["167"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",{"desc":"168","fix":"169"},{"desc":"170","fix":"171"},{"desc":"170","fix":"172"},{"desc":"170","fix":"173"},"Update the dependencies array to be: [authState]",{"range":"174","text":"175"},"Update the dependencies array to be: [id]",{"range":"176","text":"177"},{"range":"178","text":"177"},{"range":"179","text":"177"},[1319,1321],"[authState]",[756,758],"[id]",[981,983],[3727,3729]]