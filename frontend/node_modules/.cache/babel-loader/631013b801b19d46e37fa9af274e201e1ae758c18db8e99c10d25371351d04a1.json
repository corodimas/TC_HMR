{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\CD\\\\Desktop\\\\Trust_Me\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport { BrowserRouter as Router, Route, Routes, Link, useNavigate } from 'react-router-dom';\nimport CCustomer from \"./pages/createCustomer\";\nimport Home from \"./pages/home\";\nimport Patient from \"./pages/patient\";\nimport Login from './pages/login';\nimport Register from './pages/register';\nimport PageNotFound from './pages/PageNotFound';\nimport GuestRoute from './utils/GuestRoute';\nimport axios from 'axios';\nimport { AuthContext } from './helpers/AuthContex';\nimport { useState, useEffect } from 'react';\nimport Cookies from 'js-cookie';\nimport PrivateRoutes from './utils/PrivateRoute';\nimport FullscreenButton from './utils/Fullscreen';\nimport TrustmeLog from './asset/logo_auto.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const initialAuthState = {\n    username: \"\",\n    id: 0,\n    status: false\n  };\n  const [authState, setAuthState] = useState(initialAuthState);\n  useEffect(() => {\n    // Check for existing cookies containing user information\n    const accessToken = Cookies.get('accessToken');\n    if (accessToken) {\n      axios.get('http://localhost:3001/auth/validate', {\n        headers: {\n          accessToken\n        }\n      }).then(response => {\n        if (response.data.error) {\n          clearAuthState();\n        } else {\n          const {\n            username,\n            id\n          } = response.data;\n          setAuthState({\n            username,\n            id,\n            status: true\n          });\n        }\n      });\n    } else {\n      clearAuthState();\n    }\n  }, []);\n  const setAuthCookies = accessToken => {\n    Cookies.set('accessToken', accessToken, {\n      expires: 7\n    }); // Set the cookie to expire in 7 days\n  };\n\n  const clearAuthState = () => {\n    Cookies.remove('accessToken');\n    setAuthState(initialAuthState);\n  };\n  const logout = () => {\n    clearAuthState();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n      value: {\n        authState,\n        setAuthState\n      },\n      children: /*#__PURE__*/_jsxDEV(Router, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"nav\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: TrustmeLog,\n            alt: \"Logo\",\n            className: \"navText img\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/\",\n            className: \"navText\",\n            children: \"Home \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 11\n          }, this), !authState.status ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Link, {\n              to: \"/login\",\n              className: \"navText\",\n              children: \"login \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/register\",\n              className: \"navText\",\n              children: \"register \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              onClick: logout,\n              className: \"navText_right\",\n              children: \" logout\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"navText_right username\",\n              children: authState.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true), /*#__PURE__*/_jsxDEV(FullscreenButton, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            element: /*#__PURE__*/_jsxDEV(PrivateRoutes, {\n              token: authState.status\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 29\n            }, this),\n            children: [/*#__PURE__*/_jsxDEV(Route, {\n              path: \"/\",\n              element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 40\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/createCustomer\",\n              element: /*#__PURE__*/_jsxDEV(CCustomer, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 54\n              }, this),\n              exact: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/patient/:id\",\n              element: /*#__PURE__*/_jsxDEV(Patient, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 50\n              }, this),\n              exact: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            element: /*#__PURE__*/_jsxDEV(GuestRoute, {\n              token: authState.status\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 29\n            }, this),\n            children: [/*#__PURE__*/_jsxDEV(Route, {\n              path: \"/login\",\n              element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 45\n              }, this),\n              exact: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/register\",\n              element: /*#__PURE__*/_jsxDEV(Register, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 48\n              }, this),\n              exact: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"*\",\n            element: /*#__PURE__*/_jsxDEV(PageNotFound, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 38\n            }, this),\n            exact: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"tCo/0kSc8IIwSMg6ljMSY/aqBzQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["BrowserRouter","Router","Route","Routes","Link","useNavigate","CCustomer","Home","Patient","Login","Register","PageNotFound","GuestRoute","axios","AuthContext","useState","useEffect","Cookies","PrivateRoutes","FullscreenButton","TrustmeLog","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","initialAuthState","username","id","status","authState","setAuthState","accessToken","get","headers","then","response","data","error","clearAuthState","setAuthCookies","set","expires","remove","logout","className","children","Provider","value","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","to","onClick","element","token","path","exact","_c","$RefreshReg$"],"sources":["C:/Users/CD/Desktop/Trust_Me/frontend/src/App.js"],"sourcesContent":["import './App.css';\nimport { BrowserRouter as Router, Route, Routes, Link, useNavigate} from 'react-router-dom'\n\nimport CCustomer from \"./pages/createCustomer\";\nimport Home from \"./pages/home\";\nimport Patient from \"./pages/patient\";\nimport Login from './pages/login'\nimport Register from './pages/register'\nimport PageNotFound from './pages/PageNotFound';\nimport GuestRoute from './utils/GuestRoute';\n\nimport axios from 'axios'\nimport { AuthContext } from './helpers/AuthContex'\nimport { useState, useEffect } from 'react'\nimport Cookies from 'js-cookie';\nimport PrivateRoutes from './utils/PrivateRoute';\nimport FullscreenButton from './utils/Fullscreen';\nimport TrustmeLog from './asset/logo_auto.png'\n\nfunction App() {\n  const initialAuthState = { username: \"\", id: 0, status: false };\n  const [authState, setAuthState] = useState(initialAuthState);\n\n  useEffect(() => {\n    // Check for existing cookies containing user information\n    const accessToken = Cookies.get('accessToken');\n    if (accessToken) {\n      axios.get('http://localhost:3001/auth/validate', {\n        headers: { accessToken },\n      }).then((response) => {\n        if (response.data.error) {\n          clearAuthState();\n        } else {\n          const { username, id } = response.data;\n          setAuthState({ username, id, status: true });\n        }\n      });\n    } else {\n      clearAuthState();\n    }\n  }, []);\n\n  const setAuthCookies = (accessToken) => {\n    Cookies.set('accessToken', accessToken, { expires: 7 }); // Set the cookie to expire in 7 days\n  };\n\n  const clearAuthState = () => {\n    Cookies.remove('accessToken');\n    setAuthState(initialAuthState);\n  };\n\n  const logout = () => {\n    clearAuthState();\n  };\n\n  return (\n    <div className='App'>\n      <AuthContext.Provider value={{ authState, setAuthState }}>\n        <Router>\n          <div className=\"nav\">\n          <img src={TrustmeLog} alt=\"Logo\" className='navText img'/>\n          <Link to=\"/\" className='navText'>Home </Link>\n          {!authState.status ? (\n            <>\n              <Link to=\"/login\" className='navText'>login </Link>\n              <Link to=\"/register\" className='navText'>register </Link>\n            </>\n          ):(\n            <>\n            <div onClick={logout} className='navText_right'> logout</div>\n            <div className='navText_right username'>{authState.username}</div>\n            </>\n          )}\n          <FullscreenButton />\n          </div>\n          <Routes>\n            <Route element={<PrivateRoutes token={authState.status} />}>\n              <Route path=\"/\" element={<Home />} />\n              <Route path=\"/createCustomer\" element={<CCustomer />} exact />\n              <Route path=\"/patient/:id\"element={<Patient />}exact/>\n            </Route>\n            <Route element={<GuestRoute token={authState.status} />}>\n              <Route path=\"/login\" element={<Login />} exact />\n              <Route path=\"/register\" element={<Register />} exact />\n            </Route>\n            \n            <Route path=\"*\" element={<PageNotFound />} exact />\n          </Routes>\n        </Router>\n      </AuthContext.Provider>\n      \n    </div>\n  )\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}