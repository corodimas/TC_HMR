{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\CD\\\\Desktop\\\\Trust_Me\\\\frontend\\\\src\\\\component\\\\Booking.jsx\";\nimport React from 'react';\nimport { AppointmentForm } from '@devexpress/dx-react-scheduler-material-ui';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppointmentEditor = ({\n  data,\n  onSave\n}) => {\n  // Implement any logic needed to handle the editing of the appointment\n  // For example, you can use a form here to edit the appointment data.\n\n  const handleSave = changedAppointment => {\n    // Call the onSave function provided as a prop to save the changes\n    onSave(changedAppointment);\n  };\n  return /*#__PURE__*/_jsxDEV(AppointmentForm, {\n    readOnly: false // Allow editing in the form\n    ,\n    visible: data !== null // Show the form only when data is available (editing mode)\n    ,\n    onVisibilityChange: () => handleSave(null) // Hide the form when it's closed\n    ,\n    ...data\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n_c = AppointmentEditor;\nexport default AppointmentEditor;\nvar _c;\n$RefreshReg$(_c, \"AppointmentEditor\");","map":{"version":3,"names":["React","AppointmentForm","jsxDEV","_jsxDEV","AppointmentEditor","data","onSave","handleSave","changedAppointment","readOnly","visible","onVisibilityChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/CD/Desktop/Trust_Me/frontend/src/component/Booking.jsx"],"sourcesContent":["import React from 'react';\r\nimport { AppointmentForm } from '@devexpress/dx-react-scheduler-material-ui';\r\n\r\nconst AppointmentEditor = ({ data, onSave }) => {\r\n  // Implement any logic needed to handle the editing of the appointment\r\n  // For example, you can use a form here to edit the appointment data.\r\n\r\n  const handleSave = (changedAppointment) => {\r\n    // Call the onSave function provided as a prop to save the changes\r\n    onSave(changedAppointment);\r\n  };\r\n\r\n  return (\r\n    <AppointmentForm\r\n      readOnly={false} // Allow editing in the form\r\n      visible={data !== null} // Show the form only when data is available (editing mode)\r\n      onVisibilityChange={() => handleSave(null)} // Hide the form when it's closed\r\n      {...data}\r\n    />\r\n  );\r\n};\r\n\r\nexport default AppointmentEditor;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,eAAe,QAAQ,4CAA4C;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7E,MAAMC,iBAAiB,GAAGA,CAAC;EAAEC,IAAI;EAAEC;AAAO,CAAC,KAAK;EAC9C;EACA;;EAEA,MAAMC,UAAU,GAAIC,kBAAkB,IAAK;IACzC;IACAF,MAAM,CAACE,kBAAkB,CAAC;EAC5B,CAAC;EAED,oBACEL,OAAA,CAACF,eAAe;IACdQ,QAAQ,EAAE,KAAM,CAAC;IAAA;IACjBC,OAAO,EAAEL,IAAI,KAAK,IAAK,CAAC;IAAA;IACxBM,kBAAkB,EAAEA,CAAA,KAAMJ,UAAU,CAAC,IAAI,CAAE,CAAC;IAAA;IAAA,GACxCF;EAAI;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACT,CAAC;AAEN,CAAC;AAACC,EAAA,GAjBIZ,iBAAiB;AAmBvB,eAAeA,iBAAiB;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}